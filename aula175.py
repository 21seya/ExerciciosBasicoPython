
print("Sets são como listas,só que não possuem elementos repetidos")
print("Para construir um set precisamos passar um objeto iterável ")
print("Por exemplo se criamos set('mississippi')teremos:")
print(set('mississippi'))
input()

print("Note que a palavra set num editor de texto para Python")
print("Possui a palavra set com uma cor diferente o que significa")
print("Que se trata de um objeto pré-definido assim como list,range...")
input()

print("Podemos criar um set também utilizado a sintaxe")
print("dos {},por exemplo")
print({1,2,3,4,5})
print({1,2,3,4,5})
input()

print("Podemos utilizar algumas operações comuns a outros")
print("objetos iteráveis como:")
print("len(s)")
print("x in s")
print("x not in s")
print("x%2 for x in range(10)} --> Set comprehension")
print("s.copy()")
input()

print("E qual a vantagem de um set?")
input()

print("1 - A unicidade")
print("Podemos adicionar elementos a um set pelo método 'add'")
print("entretanto, quando adicionamos um novo elemento se esse")
print("elemento já estiver dentro do set o esse permenacerá ")
print("inalterado,por exemplo:")
s = set((1,2,3,4,5))
print("set=",s)
s.add(6)
print("Set + 6 de novo =",s)
input()

print("2- Dinamicidade")
print("Podemos adicionar ou remover elementos a partir")
print("de alguns metodos:")
print("add = Adicionando um novo elemento ao set")
s.add(7)
print(s)
print("remove = Remove um elemento,senão dá um erro")
s.remove(9)
print(s)
try:
    s.remove(9)
except Exception as E:
    print(E)
print("discard = Remove um elemento, mas não  levanta erro")
s.discard(8)
s.discard(8)
print(s)
print("pop = Remove retorna um elemento  aleatório do set ")
print(s.pop())
print(s)
print("clear = Remove todos os elementos do set")
s.clear()
print(s)
input()

print("3- intersecção")
print("Criaremos dois sets,serão duas listas de pessoas")
print("que irão para um determinado evento A e B")
print("Podemos obter as pessoas que vão tanto para o")
print("evento A quanto B utilizando o método 'intersction'")
a = set(["Lucas","Joao","Henrique"])
b = set(["Joao","Julia"])
print(b.intersection(a))
print(a.intersection(b))
